#include "storage.fc";
#include "../common/dic.fc";
#include "../common/stdlib.fc";
#include "../common/utils.fc";
const BUCKET_KEY_LENGTH = 16;

(int) get_current_date() {
    return now() / ONEDAY;
}

() cleanup_expired_receipt_buckets(int current_date) inline {
    int expire_date = current_date - 2;
    (cell value, int found) = idict_get_ref?(storage::receipt_record_dic_bucket, BUCKET_KEY_LENGTH, expire_date);
    if (found) {
        (storage::receipt_record_dic_bucket,_) = idict_delete?(storage::receipt_record_dic_bucket, BUCKET_KEY_LENGTH, expire_date);
    }
}

(int) is_receipt_exist(int receipt_hash) inline {
    int bucket_key = get_current_date();
    (cell receipt_hash_dic, int found) = idict_get_ref?(storage::receipt_record_dic_bucket, BUCKET_KEY_LENGTH, bucket_key);
    (cell receipt_hash_dic_one_day_before, int found_one_day_before) = idict_get_ref?(storage::receipt_record_dic_bucket, BUCKET_KEY_LENGTH, bucket_key - 1);
    if (found) {
        (slice value, int found) = idict_get?(receipt_hash_dic, DEFAULT_KEY_LENGTH, receipt_hash);
        if (found) {
            return -1;
        } else {
            if (found_one_day_before) {
                (slice value, int found) = idict_get?(receipt_hash_dic_one_day_before, DEFAULT_KEY_LENGTH, receipt_hash);
                if (found) {
                    return -1;
                }
            }
        }
    } else {
        if (found_one_day_before) {
            (slice value, int found) = idict_get?(receipt_hash_dic_one_day_before, DEFAULT_KEY_LENGTH, receipt_hash);
            if (found) {
                return -1;
            }
        } else {
            return 0;
        }
    }
    return 0;
}

(int) record_receipt_buckets(int timestamp, int receipt_hash) inline {
    int bucket_key = get_current_date();
    (cell receipt_hash_dic, int found) = idict_get_ref?(storage::receipt_record_dic_bucket, BUCKET_KEY_LENGTH, bucket_key);
    int exist = is_receipt_exist(receipt_hash);
    if (exist) {
        return 0;
    } else {
        if (~ found) {
            receipt_hash_dic = new_dict();
        }
    }
    receipt_hash_dic = idict_set(receipt_hash_dic, DEFAULT_KEY_LENGTH, receipt_hash, begin_cell().store_uint(timestamp,32).end_cell().begin_parse());
    storage::receipt_record_dic_bucket = idict_set(storage::receipt_record_dic_bucket, BUCKET_KEY_LENGTH, bucket_key, receipt_hash_dic.begin_parse());
    cleanup_expired_receipt_buckets(bucket_key);
    return -1;
}

(int) clear_failed_receipt_hash(int receipt_hash) {
    int bucket_key = get_current_date();
    int one_day_before_bucket_key = bucket_key - 1;
    (cell receipt_hash_dic, int found) = idict_get_ref?(storage::receipt_record_dic_bucket, BUCKET_KEY_LENGTH, bucket_key);
    (cell receipt_hash_dic_one_day_before, int found_one_day_before) = idict_get_ref?(storage::receipt_record_dic_bucket, BUCKET_KEY_LENGTH, one_day_before_bucket_key);
    int deleted = 0;

    if (found) {
        (slice value, int found_receipt) = idict_get?(receipt_hash_dic, DEFAULT_KEY_LENGTH, receipt_hash);
        if (found_receipt) {
            (receipt_hash_dic,_) = idict_delete?(receipt_hash_dic, DEFAULT_KEY_LENGTH, receipt_hash);
            storage::receipt_record_dic_bucket = idict_set(storage::receipt_record_dic_bucket, BUCKET_KEY_LENGTH, bucket_key, receipt_hash_dic.begin_parse());
            deleted = -1;
        }
    }

    if (~ deleted & found_one_day_before) {
        (slice value, int found_receipt) = idict_get?(receipt_hash_dic_one_day_before, DEFAULT_KEY_LENGTH, receipt_hash);
        if (found_receipt) {
            (receipt_hash_dic_one_day_before,_) = idict_delete?(receipt_hash_dic_one_day_before, DEFAULT_KEY_LENGTH, receipt_hash);
            storage::receipt_record_dic_bucket = idict_set(storage::receipt_record_dic_bucket, BUCKET_KEY_LENGTH, one_day_before_bucket_key, receipt_hash_dic_one_day_before.begin_parse());
            deleted = -1;
        }
    }

    return deleted ? -1 : 0;
}





