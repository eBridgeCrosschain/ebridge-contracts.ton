;; int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool src:MsgAddress -> 011000
const int msg_flag::non_bounceable = 0x10;
const int msg_flag::bounceable = 0x18;

;; send_raw_message modes
const REVERT_ON_ERRORS = 0;
const PAY_FEES_SEPARATELY = 1;
const IGNORE_ERRORS = 2;
const SELFDESTRUCT_ON_EMPTY = 32;
const CARRY_REMAINING_GAS = 64;
const CARRY_REMAINING_BALANCE = 128;


builder store_msg_flag(builder b, int msg_flag) inline { return b.store_uint(msg_flag, 6); }

{-
  Helpers below fill in default/overwritten values of message layout:
  Relevant part of TL-B schema:
  ... other:ExtraCurrencyCollection ihr_fee:Grams fwd_fee:Grams created_lt:uint64 created_at:uint32 = CommonMsgInfoRelaxed;
  bits      1                               4             4                64                32
  ... init:(Maybe (Either StateInit ^StateInit))  body:(Either X ^X) = Message X;
  bits      1      1(if prev is true)                   1

-}

builder store_msgbody_prefix_stateinit(builder b, cell state_init, cell ref) inline {
    return b.store_uint(4 + 2 + 1, 1 + 4 + 4 + 64 + 32 + 1 + 1 + 1).store_ref(state_init).store_ref(ref);
}
builder store_msgbody_prefix_slice(builder b) inline {
    return b.store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1);
}
builder store_msgbody_prefix_ref(builder b, cell ref) inline {
    return b.store_uint(1, 1 + 4 + 4 + 64 + 32 + 1 + 1).store_ref(ref);
}

(slice, ()) skip_bounce_flag(slice s) impure inline {
    s~skip_bits(32); ;; 0xFFFFFFFF
    return (s, ());
}

() emit_log_simple(int event_id, cell data, int need_separate_cell) impure inline {
    ;; 1023 - (4+2+9+256+64+32+2) = 654 bit free

    var msg = begin_cell()
        .store_uint (12, 4)         ;; ext_out_msg_info$11 src:MsgAddressInt () 1100
        .store_uint (1, 2)          ;; addr_extern$01
        .store_uint (256, 9)        ;; len:(## 9)
        .store_uint(event_id, 256); ;; external_address:(bits len)

    if (need_separate_cell) {
        msg = msg.store_uint(1, 64 + 32 + 2) ;; created_lt, created_at, init:Maybe, body:Either
            .store_ref(data);
    } else {
        msg = msg.store_uint(0, 64 + 32 + 2) ;; created_lt, created_at, init:Maybe, body:Either
            .store_slice(data.begin_parse());
    }

    send_raw_message(msg.end_cell(), 0);
}