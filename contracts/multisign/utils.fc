const int ORDER_SEQNO_SIZE = 256;
const int INDEX_SIZE = 8;
const int MASK_SIZE = 1 << INDEX_SIZE;
const int TIMESTAMP_SIZE = 48;
const int HASH_SIZE = 256;

(slice, cell) load_nonempty_dict(slice s) asm(-> 1 0) "LDREF";
builder store_nonempty_dict(builder b, cell c) asm(c b) "STREF";

(slice, int) ~load_order_seqno(slice s) inline {
    return s.load_uint(ORDER_SEQNO_SIZE);
}

builder store_order_seqno(builder b, int seqno) inline {
    return b.store_uint(seqno, ORDER_SEQNO_SIZE);
}

builder store_index(builder b, int index) inline {
    return b.store_uint(index, INDEX_SIZE);
}

(slice, int) ~load_index(slice s) inline {
    return s.load_uint(INDEX_SIZE);
}

(slice, int) ~load_timestamp(slice s) inline {
    return s.load_uint(TIMESTAMP_SIZE);
}

builder store_timestamp(builder b, int timestamp) inline {
    return b.store_uint(timestamp, TIMESTAMP_SIZE);
}

builder store_bool(builder b, int value) inline {
    return b.store_int(value, 1);
}

(slice, int) ~load_bool(slice s) inline {
    return s.load_int(1);
}

builder store_hash(builder b, int hash) inline {
    return b.store_uint(hash, HASH_SIZE);
}

(slice, int) ~load_hash(slice s) inline {
    return s.load_uint(HASH_SIZE);
}